/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package registration.system;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.IntelliJTheme;
import com.formdev.flatlaf.intellijthemes.FlatCyanLightIJTheme;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author nigel
 */
public class PersonnelGUI extends javax.swing.JFrame {
    private final String dataUser = "dataUser.txt";
    /**
     * Creates new form Personnel
     */
    public PersonnelGUI() {
        initComponents();
        setPreferredSize(new Dimension(1080, 670));
        pack();
        updatePeopleTable();
        updateAppointmentTable();
        updateDashboard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        sidePanels = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        appointmentPanelButton = new javax.swing.JPanel();
        appointmentButtonLabel = new javax.swing.JLabel();
        vaccinePanelButton = new javax.swing.JPanel();
        vaccineButtonLabel = new javax.swing.JLabel();
        homePanelButton = new javax.swing.JPanel();
        homeButtonLabel = new javax.swing.JLabel();
        peoplePanelButton = new javax.swing.JPanel();
        peopleButtonLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        logOutButton = new javax.swing.JButton();
        mainPanels = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        backgroundImage1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        appointmentPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        centreAPCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        apIDSearchText = new javax.swing.JTextField();
        searchAPButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        dateAPChooser = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        apHourSlider = new javax.swing.JSpinner();
        jLabel29 = new javax.swing.JLabel();
        apMinuteSlider = new javax.swing.JSpinner();
        jLabel30 = new javax.swing.JLabel();
        vaccineAPCombo = new javax.swing.JComboBox<>();
        adAPButton = new javax.swing.JButton();
        clearAPButton = new javax.swing.JButton();
        saveAPButton = new javax.swing.JButton();
        deleteAPButton = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        apIDText = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        peopleAPText = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        appointmentTable = new javax.swing.JTable();
        peoplePanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        peopleTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        userIDText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        searchPeopleButton = new javax.swing.JButton();
        peopleNameText = new javax.swing.JTextField();
        usernamePeopleText = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        passPeopleText = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        phonePeopleText = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        dobPeopleChooser = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        citizenPeopleText = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        malePeopleButton = new javax.swing.JRadioButton();
        femalePeopleButton = new javax.swing.JRadioButton();
        addPeopleButton = new javax.swing.JButton();
        deletePeopleButton = new javax.swing.JButton();
        savePeopleButton = new javax.swing.JButton();
        clearPeopleButton = new javax.swing.JButton();
        stateComboBox = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        statusPeopleText = new javax.swing.JTextField();
        vaccinePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        centreSearchCombo = new javax.swing.JComboBox<>();
        vaccineSearchCombo = new javax.swing.JComboBox<>();
        searchStatusButton = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusTable = new javax.swing.JTable();
        addVaccineButton = new javax.swing.JButton();
        modifyVaccineButton = new javax.swing.JButton();
        deleteVaccineButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        centreModifyCombo = new javax.swing.JComboBox<>();
        vaccineModifyCombo = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        vaccineQuantityText = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        saveModifyButton = new javax.swing.JButton();
        returnModifyButton = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        addSupplySpinner = new javax.swing.JSpinner();
        dateVaccineChooser = new com.toedter.calendar.JDateChooser();
        jPanel8 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        centreCombo = new javax.swing.JComboBox<>();
        vaccineCombo = new javax.swing.JComboBox<>();
        saveVaccineButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        statusDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Personnel Dashboard");
        setMinimumSize(new java.awt.Dimension(1073, 640));
        setResizable(false);

        sidePanels.setBackground(new java.awt.Color(41, 48, 57));
        sidePanels.setPreferredSize(new java.awt.Dimension(268, 640));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N

        appointmentPanelButton.setBackground(new java.awt.Color(41, 48, 57));
        appointmentPanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentPanelButtonMouseClicked(evt);
            }
        });

        appointmentButtonLabel.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        appointmentButtonLabel.setForeground(new java.awt.Color(255, 255, 255));
        appointmentButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appointmentButtonLabel.setText("Appointments");

        javax.swing.GroupLayout appointmentPanelButtonLayout = new javax.swing.GroupLayout(appointmentPanelButton);
        appointmentPanelButton.setLayout(appointmentPanelButtonLayout);
        appointmentPanelButtonLayout.setHorizontalGroup(
            appointmentPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appointmentButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        appointmentPanelButtonLayout.setVerticalGroup(
            appointmentPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appointmentButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        vaccinePanelButton.setBackground(new java.awt.Color(41, 48, 57));
        vaccinePanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vaccinePanelButtonMouseClicked(evt);
            }
        });

        vaccineButtonLabel.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        vaccineButtonLabel.setForeground(new java.awt.Color(255, 255, 255));
        vaccineButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vaccineButtonLabel.setText("Vaccine");

        javax.swing.GroupLayout vaccinePanelButtonLayout = new javax.swing.GroupLayout(vaccinePanelButton);
        vaccinePanelButton.setLayout(vaccinePanelButtonLayout);
        vaccinePanelButtonLayout.setHorizontalGroup(
            vaccinePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vaccineButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        vaccinePanelButtonLayout.setVerticalGroup(
            vaccinePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vaccineButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        homePanelButton.setBackground(new java.awt.Color(255, 255, 255));
        homePanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePanelButtonMouseClicked(evt);
            }
        });

        homeButtonLabel.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        homeButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homeButtonLabel.setText("Home");

        javax.swing.GroupLayout homePanelButtonLayout = new javax.swing.GroupLayout(homePanelButton);
        homePanelButton.setLayout(homePanelButtonLayout);
        homePanelButtonLayout.setHorizontalGroup(
            homePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        homePanelButtonLayout.setVerticalGroup(
            homePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        peoplePanelButton.setBackground(new java.awt.Color(41, 48, 57));
        peoplePanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peoplePanelButtonMouseClicked(evt);
            }
        });

        peopleButtonLabel.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        peopleButtonLabel.setForeground(new java.awt.Color(255, 255, 255));
        peopleButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peopleButtonLabel.setText("People");

        javax.swing.GroupLayout peoplePanelButtonLayout = new javax.swing.GroupLayout(peoplePanelButton);
        peoplePanelButton.setLayout(peoplePanelButtonLayout);
        peoplePanelButtonLayout.setHorizontalGroup(
            peoplePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(peopleButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        peoplePanelButtonLayout.setVerticalGroup(
            peoplePanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(peopleButtonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        logOutButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_Logout_26px.png"))); // NOI18N
        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelsLayout = new javax.swing.GroupLayout(sidePanels);
        sidePanels.setLayout(sidePanelsLayout);
        sidePanelsLayout.setHorizontalGroup(
            sidePanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homePanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(appointmentPanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(peoplePanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vaccinePanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sidePanelsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(sidePanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        sidePanelsLayout.setVerticalGroup(
            sidePanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelsLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(homePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appointmentPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peoplePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vaccinePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        mainPanels.setLayout(new java.awt.CardLayout());

        homePanel.setMinimumSize(new java.awt.Dimension(771, 640));
        homePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/background.png"))); // NOI18N
        homePanel.add(backgroundImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 540, 420));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel8.setText("Dashboard");
        homePanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setText("Your account overview");
        homePanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 60, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel6.setText("Welcome, Admin");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        homePanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 290, 50));

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        jLabel23.setText("Upcoming Appointments");

        jLabel44.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("10");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(9, Short.MAX_VALUE))
            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );

        homePanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 270, 180));

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        jLabel36.setText("Total Users");

        jLabel37.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("10");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36)
                .addContainerGap(150, Short.MAX_VALUE))
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
        );

        homePanel.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 270, 180));

        mainPanels.add(homePanel, "homePanel");

        appointmentPanel.setMinimumSize(new java.awt.Dimension(771, 640));
        appointmentPanel.setName(""); // NOI18N
        appointmentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setText("Appointments");
        appointmentPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel10.setText("Manage all appointments");
        appointmentPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 60, -1, -1));

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/background.png"))); // NOI18N
        appointmentPanel.add(backgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 540, 420));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("appointmentPanel");

        centreAPCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        centreAPCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "World Trade Centre KL", "Wisma Belia", "Stadium Tun Abdul Razak", "Pusat Sains dan Kreativiti", "Kuala Lumpur Convention Centre", "Ideal Convention Centre", "Borneo Convention Centre Kuching", "Axiata Arena Bukit Jalil" }));
        centreAPCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centreAPComboActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Add New Appointment");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Enter Appointment ID to Search: ");

        apIDSearchText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        searchAPButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_search_26px_2.png"))); // NOI18N
        searchAPButton.setText("Search");
        searchAPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAPButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel17.setText("Vaccination Centre");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel27.setText("Date");

        dateAPChooser.setDateFormatString("dd-MM-yyyy\n");
        dateAPChooser.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel28.setText("Time");

        apHourSlider.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        apHourSlider.setModel(new javax.swing.SpinnerNumberModel(1, 1, 24, 1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel29.setText(":");

        apMinuteSlider.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        apMinuteSlider.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 30));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel30.setText("Vaccination Type");

        vaccineAPCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vaccineAPCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pfizer-BioNtech", "AstraZeneca", "Janssen/Ad26.COV 2.S", "Sputnik V", "Sinovac-CoronaVac", "Cansino Biologics" }));
        vaccineAPCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineAPComboActionPerformed(evt);
            }
        });

        adAPButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        adAPButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_add_26px_1.png"))); // NOI18N
        adAPButton.setText("Add");
        adAPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adAPButtonActionPerformed(evt);
            }
        });

        clearAPButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        clearAPButton.setText("Clear");
        clearAPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAPButtonActionPerformed(evt);
            }
        });

        saveAPButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        saveAPButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_save_26px.png"))); // NOI18N
        saveAPButton.setText("Save");
        saveAPButton.setEnabled(false);
        saveAPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAPButtonActionPerformed(evt);
            }
        });

        deleteAPButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        deleteAPButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_Delete_26px.png"))); // NOI18N
        deleteAPButton.setText("Delete");
        deleteAPButton.setEnabled(false);
        deleteAPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAPButtonActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel31.setText("Appointment ID");

        apIDText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        apIDText.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel32.setText("IC/Passport Number");

        peopleAPText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(apIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32)
                                    .addComponent(peopleAPText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel27)
                                            .addGap(170, 170, 170))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel28)
                                            .addGap(161, 161, 161))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(dateAPChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(45, 45, 45)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(apHourSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(apMinuteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(centreAPCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vaccineAPCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel30))
                                .addGap(46, 46, 46))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apIDSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(saveAPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteAPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearAPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adAPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(541, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(adAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(clearAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(saveAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(deleteAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateAPChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(apIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(centreAPCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(apHourSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29)
                                    .addComponent(apMinuteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vaccineAPCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(peopleAPText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(apIDSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchAPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))))
        );

        appointmentPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 751, 340));

        appointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "AppointmentID", "Date", "Time", "Centre", "User ID", "Expiry Date", "Vaccine Type", "Dose Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        appointmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(appointmentTable);

        appointmentPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 750, 170));

        mainPanels.add(appointmentPanel, "appointmentPanel");

        peoplePanel.setMinimumSize(new java.awt.Dimension(771, 640));
        peoplePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel11.setText("People");
        peoplePanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel12.setText("Manage all users in the system");
        peoplePanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 60, -1, -1));

        peopleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PeopleID", "Name", "UserID", "UserPassword", "Phone Number", "Date of Birth", "Gender", "State", "Citizenship", "Status", "Dose 1", "Dose 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        peopleTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        peopleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peopleTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(peopleTable);

        peoplePanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 750, 170));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setToolTipText("peoplePanel");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("Add New People");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Enter IC Number to Search: ");

        userIDText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel16.setText("Name");

        searchPeopleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_search_26px_2.png"))); // NOI18N
        searchPeopleButton.setText("Search");
        searchPeopleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPeopleButtonActionPerformed(evt);
            }
        });

        peopleNameText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        usernamePeopleText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel18.setText("Password");

        passPeopleText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel19.setText("Phone Number");

        phonePeopleText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel20.setText("Date of Birth");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel21.setText("Status");

        dobPeopleChooser.setDateFormatString("dd-MM-yyyy");
        dobPeopleChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel22.setText("Citizenship");

        citizenPeopleText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel25.setText("Gender");

        genderButtonGroup.add(malePeopleButton);
        malePeopleButton.setText("Male");

        genderButtonGroup.add(femalePeopleButton);
        femalePeopleButton.setText("Female");

        addPeopleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_registration_26px.png"))); // NOI18N
        addPeopleButton.setText("Add");
        addPeopleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPeopleButtonActionPerformed(evt);
            }
        });

        deletePeopleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_Delete_26px.png"))); // NOI18N
        deletePeopleButton.setText("Delete");
        deletePeopleButton.setEnabled(false);
        deletePeopleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePeopleButtonActionPerformed(evt);
            }
        });

        savePeopleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_save_26px.png"))); // NOI18N
        savePeopleButton.setText("Save");
        savePeopleButton.setEnabled(false);
        savePeopleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePeopleButtonActionPerformed(evt);
            }
        });

        clearPeopleButton.setText("Clear");
        clearPeopleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPeopleButtonActionPerformed(evt);
            }
        });

        stateComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Johor", "Kedah", "Kelantan", "Kuala Lumpur", "Labuan", "Malacca", "Negeri Sembilan", "Pahang", "Perak", "Perlis", "Putrajaya", "Sabah", "Sarawak", "Selangor", "Sembilan", "Terengganu" }));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel24.setText("IC/Passport Number");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel26.setText("State");

        statusPeopleText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusPeopleText.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchPeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(peopleNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernamePeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passPeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dobPeopleChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                        .addComponent(phonePeopleText)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusPeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(malePeopleButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(femalePeopleButton))
                                        .addComponent(citizenPeopleText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deletePeopleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(clearPeopleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(savePeopleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addPeopleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(peopleNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel20)
                            .addComponent(jLabel25)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phonePeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(citizenPeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addPeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(savePeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernamePeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobPeopleChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(malePeopleButton)
                            .addComponent(femalePeopleButton))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel26)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(clearPeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(passPeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusPeopleText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(deletePeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPeopleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        peoplePanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 751, 340));

        mainPanels.add(peoplePanel, "peoplePanel");

        vaccinePanel.setMinimumSize(new java.awt.Dimension(771, 640));
        vaccinePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel13.setText("Vaccine");
        vaccinePanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel14.setText("Manage Vaccines in Vaccination Centres");
        vaccinePanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 60, -1, -1));

        centreSearchCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        centreSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "World Trade Centre KL", "Wisma Belia", "Stadium Tun Abdul Razak", "Pusat Sains dan Kreativiti", "Kuala Lumpur Convention Centre", "Ideal Convention Centre", "Borneo Convention Centre Kuching", "Axiata Arena Bukit Jalil" }));
        vaccinePanel.add(centreSearchCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 230, 30));

        vaccineSearchCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vaccineSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Pfizer-BioNtech", "AstraZeneca", "Janssen/Ad26.COV 2.S", "Sputnik V", "Sinovac-CoronaVac", "Cansino Biologics" }));
        vaccinePanel.add(vaccineSearchCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        searchStatusButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        searchStatusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_search_26px_2.png"))); // NOI18N
        searchStatusButton.setText("Search");
        searchStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStatusButtonActionPerformed(evt);
            }
        });
        vaccinePanel.add(searchStatusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, -1));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel46.setText("Search via Vaccination Centre");
        vaccinePanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, -1));

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel48.setText("Date");
        vaccinePanel.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, -1, -1));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel45.setText("Search via Vaccine Type");
        vaccinePanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jPanel4.setLayout(new java.awt.CardLayout());

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel47.setText("Vaccination Status on ");

        statusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Centre Name", "Centre Location", "Vaccine Name", "Vaccine Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        statusTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(statusTable);

        addVaccineButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addVaccineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_add_26px_1.png"))); // NOI18N
        addVaccineButton.setText("Add");
        addVaccineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVaccineButtonActionPerformed(evt);
            }
        });

        modifyVaccineButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        modifyVaccineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_edit_property_26px.png"))); // NOI18N
        modifyVaccineButton.setText("Modify");
        modifyVaccineButton.setEnabled(false);
        modifyVaccineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyVaccineButtonActionPerformed(evt);
            }
        });

        deleteVaccineButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        deleteVaccineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_Delete_26px.png"))); // NOI18N
        deleteVaccineButton.setText("Delete");
        deleteVaccineButton.setEnabled(false);
        deleteVaccineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteVaccineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel47)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(modifyVaccineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteVaccineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47)
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(modifyVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(deleteVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel6, "vaccineTableCard");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel38.setText("Modify Vaccine Supply");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel39.setText("Vaccine Name: ");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel40.setText("Centre Name:");

        centreModifyCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        centreModifyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "World Trade Centre KL", "Wisma Belia", "Stadium Tun Abdul Razak", "Pusat Sains dan Kreativiti", "Kuala Lumpur Convention Centre", "Ideal Convention Centre", "Borneo Convention Centre Kuching", "Axiata Arena Bukit Jalil" }));

        vaccineModifyCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vaccineModifyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pfizer-BioNtech", "AstraZeneca", "Janssen/Ad26.COV 2.S", "Sputnik V", "Sinovac-CoronaVac", "Cansino Biologics" }));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel41.setText("Current Vaccine Quantity:");

        vaccineQuantityText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel42.setText("Date");

        saveModifyButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        saveModifyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_save_26px.png"))); // NOI18N
        saveModifyButton.setText("Save");
        saveModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveModifyButtonActionPerformed(evt);
            }
        });

        returnModifyButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        returnModifyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_return_26px.png"))); // NOI18N
        returnModifyButton.setText("Return");
        returnModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnModifyButtonActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel43.setText("Additional Supply");

        addSupplySpinner.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addSupplySpinner.setModel(new javax.swing.SpinnerNumberModel());

        dateVaccineChooser.setDateFormatString("dd-MM-yyyy");
        dateVaccineChooser.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(centreModifyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel39)
                    .addComponent(vaccineModifyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(vaccineQuantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(addSupplySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(dateVaccineChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel38))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(returnModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(saveModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel38)
                .addGap(45, 45, 45)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vaccineModifyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateVaccineChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(centreModifyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vaccineQuantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(returnModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSupplySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.add(jPanel9, "modifyVaccineCard");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel33.setText("Add New Vaccine");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel34.setText("Vaccine Name: ");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel35.setText("Centre Name:");

        centreCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        centreCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "World Trade Centre KL", "Wisma Belia", "Stadium Tun Abdul Razak", "Pusat Sains dan Kreativiti", "Kuala Lumpur Convention Centre", "Ideal Convention Centre", "Borneo Convention Centre Kuching", "Axiata Arena Bukit Jalil" }));

        vaccineCombo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vaccineCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pfizer-BioNtech", "AstraZeneca", "Janssen/Ad26.COV 2.S", "Sputnik V", "Sinovac-CoronaVac", "Cansino Biologics" }));

        saveVaccineButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        saveVaccineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_save_26px.png"))); // NOI18N
        saveVaccineButton.setText("Save");
        saveVaccineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveVaccineButtonActionPerformed(evt);
            }
        });

        returnButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        returnButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8_return_26px.png"))); // NOI18N
        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel33))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(saveVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(236, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(centreCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel34)
                    .addComponent(vaccineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(293, 293, 293))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel33)
                .addGap(32, 32, 32)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vaccineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centreCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveVaccineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        jPanel4.add(jPanel8, "addVaccineCard");

        vaccinePanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 780, 360));
        vaccinePanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 320, 10));

        statusDateChooser.setDateFormatString("dd-MM-yyyy");
        statusDateChooser.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vaccinePanel.add(statusDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 140, 170, 30));

        mainPanels.add(vaccinePanel, "vaccinePanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidePanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sidePanels, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePanelButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanels.getLayout();
        card.show(mainPanels, "homePanel");
        homePanelButton.setBackground(Color.white);
        appointmentPanelButton.setBackground(new Color(41,48,57));
        peoplePanelButton.setBackground(new Color(41,48,57));
        vaccinePanelButton.setBackground(new Color(41,48,57));
        homeButtonLabel.setForeground(Color.black);
        appointmentButtonLabel.setForeground(Color.white);
        peopleButtonLabel.setForeground(Color.white);
        vaccineButtonLabel.setForeground(Color.white);
    }//GEN-LAST:event_homePanelButtonMouseClicked

    private void appointmentPanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentPanelButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanels.getLayout();
        card.show(mainPanels, "appointmentPanel");
        homePanelButton.setBackground(new Color(41,48,57));
        appointmentPanelButton.setBackground(Color.white);
        peoplePanelButton.setBackground(new Color(41,48,57));
        vaccinePanelButton.setBackground(new Color(41,48,57));
        homeButtonLabel.setForeground(Color.white);
        appointmentButtonLabel.setForeground(Color.black);
        peopleButtonLabel.setForeground(Color.white);
        vaccineButtonLabel.setForeground(Color.white);
        dateAPChooser.getJCalendar().setMinSelectableDate(new Date(new Date().getTime() + (1000 * 60 * 60 * 24)));
    }//GEN-LAST:event_appointmentPanelButtonMouseClicked

    private void peoplePanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peoplePanelButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanels.getLayout();
        card.show(mainPanels, "peoplePanel");
        homePanelButton.setBackground(new Color(41,48,57));
        appointmentPanelButton.setBackground(new Color(41,48,57));
        peoplePanelButton.setBackground(Color.white);
        vaccinePanelButton.setBackground(new Color(41,48,57));
        homeButtonLabel.setForeground(Color.white);
        appointmentButtonLabel.setForeground(Color.white);
        peopleButtonLabel.setForeground(Color.black);
        vaccineButtonLabel.setForeground(Color.white);
    }//GEN-LAST:event_peoplePanelButtonMouseClicked

    private void vaccinePanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaccinePanelButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanels.getLayout();
        card.show(mainPanels, "vaccinePanel");
        homePanelButton.setBackground(new Color(41,48,57));
        appointmentPanelButton.setBackground(new Color(41,48,57));
        peoplePanelButton.setBackground(new Color(41,48,57));
        vaccinePanelButton.setBackground(Color.white);
        homeButtonLabel.setForeground(Color.white);
        appointmentButtonLabel.setForeground(Color.white);
        peopleButtonLabel.setForeground(Color.white);
        vaccineButtonLabel.setForeground(Color.black);
        statusDateChooser.getJCalendar().setMinSelectableDate(new Date(new Date().getTime() + (1000 * 60 * 60 * 24)));
    }//GEN-LAST:event_vaccinePanelButtonMouseClicked

    private void clearPeopleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPeopleButtonActionPerformed
        // TODO add your handling code here:
//        peopleNameText.setText("");
//        usernamePeopleText.setText("");
//        passPeopleText.setText("");
//        phonePeopleText.setText("");
//        ((JTextField)dobPeopleChooser.getDateEditor().getUiComponent()).setText("Date of Birth");
//        stateComboBox.setEditable(true);
//        stateComboBox.setSelectedItem("State");
//        citizenPeopleText.setText("");
//        malePeopleButton.setSelected(false);
//        femalePeopleButton.setSelected(false);
//        statusPeopleText.setText("");
        clearComponents(jPanel2);
        usernamePeopleText.setEnabled(true);
        deletePeopleButton.setEnabled(false);
        addPeopleButton.setEnabled(true);
        savePeopleButton.setEnabled(false);
    }//GEN-LAST:event_clearPeopleButtonActionPerformed

    private void peopleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peopleTableMouseClicked
        // TODO add your handling code here:
        int row = peopleTable.getSelectedRow();
        String userID = String.valueOf(peopleTable.getValueAt(row, 2));
        displayPeopleDetails(new People().getPeopleDetails(userID));
        usernamePeopleText.setEnabled(false);
        deletePeopleButton.setEnabled(true);
        addPeopleButton.setEnabled(false);
        savePeopleButton.setEnabled(true);
    }//GEN-LAST:event_peopleTableMouseClicked

    private void searchPeopleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPeopleButtonActionPerformed
        // TODO add your handling code here:
        People ppl = new People().getPeopleDetails(userIDText.getText());
        if (ppl != null)
        {
            displayPeopleDetails(ppl);
            usernamePeopleText.setEnabled(false);
            deletePeopleButton.setEnabled(true);
            addPeopleButton.setEnabled(false);
            savePeopleButton.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Customer with PeopleID" + 
                    userIDText.getText() + " not found!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchPeopleButtonActionPerformed

    private void addPeopleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPeopleButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
        try {
            if(new Login().isValidUserID(usernamePeopleText.getText()))
            {
                if (new Login().isValidPassword(passPeopleText.getText()))
                {
                    Appointment emptyAppointment = new Appointment();
                    emptyAppointment.setAppointmentID("null");
                    People newPeople = new People();
                    newPeople.setName(peopleNameText.getText());
                    newPeople.setPhoneNum(phonePeopleText.getText());
                    newPeople.setUsername(usernamePeopleText.getText());
                    newPeople.setPassword(passPeopleText.getText());
                    newPeople.setDate(dcn.format(dobPeopleChooser.getDate()));
                    newPeople.setState(String.valueOf(stateComboBox.getSelectedItem()));
                    newPeople.setCitizenship(citizenPeopleText.getText());
                    newPeople.setGender(getSelectedButton());
                    newPeople.setUserType("People");
                    newPeople.setStatus("Unvaccinated");
                    newPeople.setDose1(emptyAppointment);
                    newPeople.setDose2(emptyAppointment);
                    newPeople.registerProfile(newPeople);
                    JOptionPane.showMessageDialog(null, "Account registered "
                    + "successfully.");
                    updatePeopleTable();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "IC/Passport Number Format is Invalid!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        clearComponents(jPanel2);
        usernamePeopleText.setEnabled(true);
        deletePeopleButton.setEnabled(false);
        addPeopleButton.setEnabled(true);
        savePeopleButton.setEnabled(false);
    }//GEN-LAST:event_addPeopleButtonActionPerformed

    private void savePeopleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePeopleButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
        People existingPpl = new People().getPeopleDetails(usernamePeopleText.getText());
        existingPpl.setName(peopleNameText.getText());
        existingPpl.setPhoneNum(phonePeopleText.getText());
        existingPpl.setUsername(usernamePeopleText.getText());
        existingPpl.setPassword(passPeopleText.getText());
        existingPpl.setDate(dcn.format(dobPeopleChooser.getDate()));
        existingPpl.setState(String.valueOf(stateComboBox.getSelectedItem()));
        existingPpl.setCitizenship(citizenPeopleText.getText());
        existingPpl.setGender(getSelectedButton());
        existingPpl.modifyProfile(existingPpl);
        updatePeopleTable();
        clearComponents(jPanel2);
        usernamePeopleText.setEnabled(true);
        deletePeopleButton.setEnabled(false);
        addPeopleButton.setEnabled(true);
        savePeopleButton.setEnabled(false);
    }//GEN-LAST:event_savePeopleButtonActionPerformed

    private void deletePeopleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePeopleButtonActionPerformed
        // TODO add your handling code here:
        boolean idFound = new People().deletePeople(usernamePeopleText.getText());
        if (idFound == true)
            {
                JOptionPane.showMessageDialog(null, "People Deleted Successfully.");
                updatePeopleTable();
                clearComponents(jPanel2);
                usernamePeopleText.setEnabled(true);
                deletePeopleButton.setEnabled(false);
                addPeopleButton.setEnabled(true);
                savePeopleButton.setEnabled(false);
            }
        else
            {
                JOptionPane.showMessageDialog(null, "UserID Not Found. Profile Cannot be Deleted.", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_deletePeopleButtonActionPerformed

    private void deleteAPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAPButtonActionPerformed
        // TODO add your handling code here:
        boolean idFound = new Appointment().deleteAppointment(apIDText.getText());
        if (idFound == true)
            {
                JOptionPane.showMessageDialog(null, "Appointment Deleted Successfully.");
                updateAppointmentTable();
                clearComponents(jPanel1);
                peopleAPText.setEnabled(true);
                deleteAPButton.setEnabled(false);
                adAPButton.setEnabled(true);
                saveAPButton.setEnabled(false);
            }
        else
            {
                JOptionPane.showMessageDialog(null, "Appointment Not Found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_deleteAPButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void adAPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adAPButtonActionPerformed
        // TODO add your handling code here:
        LocalDate currentDate = LocalDate.now();
        SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
        try {
            if (new People().checkUserID(peopleAPText.getText()) == true)
            {
                if (new Centre().getRemainingVaccine((String)vaccineAPCombo.getSelectedItem(), (String)centreAPCombo.getSelectedItem(), dcn.format(dateAPChooser.getDate()))
                    > 0)
                {
                    if (new Appointment().getFutureAppointments(peopleAPText.getText(), currentDate).size() > 0) 
                        {
                            Appointment newAppointment = new Appointment();
                            newAppointment.setDate(dcn.format(dateAPChooser.getDate()));
                            newAppointment.setExpDate(dcn.format(dateAPChooser.getDate()));
                            String time = apHourSlider.getValue() + ":" + apMinuteSlider.getValue();
                            newAppointment.setDoseNum(newAppointment.checkDoseNum(peopleAPText.getText()));
                            newAppointment.setTime(LocalTime.parse(time));
                            newAppointment.setPeople(new People().getPeopleDetails(peopleAPText.getText()));
                            newAppointment.setCentre(new Centre().searchCentre((String) centreAPCombo.getSelectedItem()));
                            newAppointment.setVaccine(new Vaccine().searchVaccine((String) vaccineAPCombo.getSelectedItem()));
                            newAppointment.regAppointment(newAppointment);  
                            JOptionPane.showMessageDialog(null, "Appointment Added Successfully.");
                            updateAppointmentTable();
                            clearComponents(jPanel1);
                            peopleAPText.setEnabled(true);
                            deleteAPButton.setEnabled(false);
                            adAPButton.setEnabled(true);
                            saveAPButton.setEnabled(false);
                        }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "There is an Existing Appointment");
                    }
                }else
                {
                    JOptionPane.showMessageDialog(null, "Selected Vaccine is out of stock on selected date.");
                }
            }else
            {
                JOptionPane.showMessageDialog(null, "IC/Passport Number Not Found.");
            }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_adAPButtonActionPerformed

    private void vaccineAPComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineAPComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineAPComboActionPerformed

    private void centreAPComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centreAPComboActionPerformed
        final DefaultComboBoxModel vaccineModel = new DefaultComboBoxModel(
                (new Centre().getCentreVaccines((String) centreAPCombo
                        .getSelectedItem()).toArray()));
        vaccineAPCombo.setModel(vaccineModel);        // TODO add your handling code here:
    }//GEN-LAST:event_centreAPComboActionPerformed

    private void clearAPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAPButtonActionPerformed
        // TODO add your handling code here:
        clearComponents(jPanel1);
        peopleAPText.setEnabled(true);
        deleteAPButton.setEnabled(false);
        adAPButton.setEnabled(true);
        saveAPButton.setEnabled(false);
    }//GEN-LAST:event_clearAPButtonActionPerformed

    private void appointmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentTableMouseClicked
        // TODO add your handling code here:
        int row = appointmentTable.getSelectedRow();
        String appointmentID = String.valueOf(appointmentTable.getValueAt(row, 0));
        displayAppointmentDetails(new Appointment().getAppointmentDetails(appointmentID));
        peopleAPText.setEnabled(false);
        deleteAPButton.setEnabled(true);
        adAPButton.setEnabled(false);
        saveAPButton.setEnabled(true);
    }//GEN-LAST:event_appointmentTableMouseClicked

    private void saveAPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAPButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
        Appointment savedAppointment = new Appointment();
        savedAppointment.setAppointmentID(apIDText.getText());
        savedAppointment.setDate(dcn.format(dateAPChooser.getDate()));
        savedAppointment.setExpDate(dcn.format(dateAPChooser.getDate()));
        String time = apHourSlider.getValue() + ":" + apMinuteSlider.getValue();
        savedAppointment.getDoseNum();
        savedAppointment.setTime(LocalTime.parse(time));
        savedAppointment.setPeople(new People().getPeopleDetails(peopleAPText.getText()));
        savedAppointment.setCentre(new Centre().searchCentre((String) centreAPCombo.getSelectedItem()));
        savedAppointment.setVaccine(new Vaccine().searchVaccine((String) vaccineAPCombo.getSelectedItem()));
        savedAppointment.modifyAppointment(savedAppointment);
        updateAppointmentTable();
        clearComponents(jPanel1);
        peopleAPText.setEnabled(true);
        deleteAPButton.setEnabled(false);
        adAPButton.setEnabled(true);
        saveAPButton.setEnabled(false);
    }//GEN-LAST:event_saveAPButtonActionPerformed

    private void searchAPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAPButtonActionPerformed
        // TODO add your handling code here:
        Appointment appointment = new Appointment().getAppointmentDetails(apIDSearchText.getText());
        if (appointment != null)
        {
            displayAppointmentDetails(appointment);
            peopleAPText.setEnabled(false);
            deleteAPButton.setEnabled(true);
            adAPButton.setEnabled(false);
            saveAPButton.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Appointment ID" + 
                    apIDSearchText.getText() + " not found!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchAPButtonActionPerformed

    private void addVaccineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVaccineButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)jPanel4.getLayout();
        card.show(jPanel4, "addVaccineCard");
    }//GEN-LAST:event_addVaccineButtonActionPerformed

    private void deleteVaccineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteVaccineButtonActionPerformed
        // TODO add your handling code here:
        int input = JOptionPane.showConfirmDialog(null, "You are about to delete this vaccine from the Centre. Continue?", 
                "Confirmation ", JOptionPane.YES_NO_OPTION);
        if (input == 0)
        {
            int row = statusTable.getSelectedRow();
            Centre centre = new Centre().searchCentre(String.valueOf(statusTable.getValueAt(row, 0)));
            ArrayList<Vaccine> vacList = centre.getVaccine();
            vacList.removeIf((Vaccine eachVaccine) -> eachVaccine.getVaccineName().equals(String.valueOf(statusTable.getValueAt(row, 2))));
            centre.modifyCentre(centre);
            JOptionPane.showMessageDialog(null, "Vaccine deleted from Centre!");
            try {
                SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
                updateStatusTable((String) vaccineSearchCombo.getSelectedItem(), 
                    (String) centreSearchCombo.getSelectedItem(), 
                    dcn.format(statusDateChooser.getDate()));
            } catch (NullPointerException ex) { }
        } 
        else{}
    }//GEN-LAST:event_deleteVaccineButtonActionPerformed

    private void modifyVaccineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyVaccineButtonActionPerformed
        CardLayout card = (CardLayout)jPanel4.getLayout();
        card.show(jPanel4, "modifyVaccineCard");
        if (!statusTable.getSelectionModel().isSelectionEmpty())
        {
            int row = statusTable.getSelectedRow();
            vaccineModifyCombo.setSelectedItem((String) statusTable.getValueAt(row, 2));
            vaccineModifyCombo.setEnabled(false);
            centreModifyCombo.setSelectedItem((String) statusTable.getValueAt(row, 0));
            centreModifyCombo.setEnabled(false);
            dateVaccineChooser.setDate(statusDateChooser.getDate());
            dateVaccineChooser.setEnabled(false);
            vaccineQuantityText.setText((String) statusTable.getValueAt(row, 3));
            vaccineQuantityText.setEnabled(false);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row first!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modifyVaccineButtonActionPerformed

    private void saveVaccineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveVaccineButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
        Centre existingCentre = new Centre().searchCentre((String) centreCombo.getSelectedItem());
        ArrayList<Vaccine> vacList = existingCentre.getVaccine();
        boolean vacExist = false;
        for (Vaccine eachVaccine:vacList)
        {
            if (eachVaccine.getVaccineName().equals((String) vaccineCombo.getSelectedItem()))
            {
                vacExist = true;
            }
        }
        if (vacExist == false) {
            Vaccine newVaccine = new Vaccine().searchVaccine((String) vaccineCombo.getSelectedItem());
            newVaccine.setVaccineQuantity(500);
            vacList.add(newVaccine);
            existingCentre.setVaccine(vacList);
            existingCentre.modifyCentre(existingCentre);
            JOptionPane.showMessageDialog(null, "Vaccine Successfully Added to Centre!");
            try {
                updateStatusTable((String) vaccineSearchCombo.getSelectedItem(), 
                    (String) centreSearchCombo.getSelectedItem(), 
                    dcn.format(statusDateChooser.getDate()));
            } catch (NullPointerException ex) { }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Vaccine already exists in the selected centre!!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveVaccineButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)jPanel4.getLayout();
        card.show(jPanel4, "vaccineTableCard");
    }//GEN-LAST:event_returnButtonActionPerformed

    private void searchStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStatusButtonActionPerformed
        try 
        {
            SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
            jLabel47.setText("Vaccination Status on " + dcn.format(statusDateChooser.getDate()));
            updateStatusTable(dcn.format(statusDateChooser.getDate()), 
                    (String) vaccineSearchCombo.getSelectedItem(), 
                    (String) centreSearchCombo.getSelectedItem());
        } catch(NullPointerException ex) {
            JOptionPane.showMessageDialog(null, 
                        "Please select a date to search!", "Error", 
                        JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchStatusButtonActionPerformed

    private void statusTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusTableMouseClicked
        // TODO add your handling code here:
        modifyVaccineButton.setEnabled(true);
        deleteVaccineButton.setEnabled(true);
    }//GEN-LAST:event_statusTableMouseClicked

    private void saveModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveModifyButtonActionPerformed
        // TODO add your handling code here:
        if ((int) addSupplySpinner.getValue() > 0 || (int) addSupplySpinner.getValue() < 0) {
            SimpleDateFormat dcn = new SimpleDateFormat("dd-MM-yyyy");
            new Centre().setAdditionalVaccineQuantity(
                    (String) vaccineModifyCombo.getSelectedItem(), 
                    (String) centreModifyCombo.getSelectedItem(), 
                    dcn.format(dateVaccineChooser.getDate()), 
                    (int) addSupplySpinner.getValue());
            try {
                updateStatusTable(dcn.format(statusDateChooser.getDate()),
                        (String) vaccineSearchCombo.getSelectedItem(), 
                        (String) centreSearchCombo.getSelectedItem());
            } catch(NullPointerException ex) { }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a number greater "
                    + "or lesser than 0!", "Warning", 
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_saveModifyButtonActionPerformed

    private void returnModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnModifyButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)jPanel4.getLayout();
        card.show(jPanel4, "vaccineTableCard");
    }//GEN-LAST:event_returnModifyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Look and Feel
        try{
            com.formdev.flatlaf.intellijthemes.FlatCyanLightIJTheme.setup();
        }
        catch (Exception e){
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelGUI().setVisible(true);
            }
        });
    }
    
    private void updatePeopleTable()
    {
        DefaultTableModel table = (DefaultTableModel) peopleTable.getModel();
        table.setRowCount(0);
        int count=0;
        ObjectInputStream ois = null;
        try {
            ois = new ObjectInputStream(new FileInputStream(dataUser));
            Object obj = null;
            while ((obj = ois.readObject()) != null) {
                if (((User)obj).getUserType().equals("People"))
                {
                    count++;
                    String[] row = { ((People)obj).getPeopleID(), 
                        ((People)obj).getName(),
                        ((People)obj).getUsername(), ((People)obj).getPassword(), 
                        (((People)obj).getPhoneNum()), 
                        ((People)obj).getDate(), 
                        ((People)obj).getGender(), 
                        ((People)obj).getState(), ((People)obj).getCitizenship(), 
                        ((People)obj).getStatus(), ((People)obj).getDose1().getAppointmentID(), 
                        (((People)obj).getDose2()).getAppointmentID() };
                    table.addRow(row);
                }
            }
        } catch (EOFException ex) {} 
        catch (ClassNotFoundException ex) { ex.printStackTrace(); }
        catch (FileNotFoundException ex) { ex.printStackTrace(); }
        catch (IOException ex) { ex.printStackTrace(); }
        finally {
            try {
                if (ois != null) {
                    ois.close();
                }
            } catch (IOException ex) { ex.printStackTrace(); }
        }
    }
    
    //Display People Details in the Swing Components
    private void displayPeopleDetails(People ppl)
    {
        try {
            Date dob = new SimpleDateFormat("dd-MM-yyyy").parse(ppl.getDate());
            peopleNameText.setText(ppl.getName());
            usernamePeopleText.setText(ppl.getUsername());
            passPeopleText.setText(ppl.getPassword());
            phonePeopleText.setText(ppl.getPhoneNum());
            dobPeopleChooser.setDate(dob);
            stateComboBox.setSelectedItem(ppl.getState());
            citizenPeopleText.setText(ppl.getCitizenship());
            if (ppl.getGender().equals("Male")) { malePeopleButton.setSelected(true); }
            else { femalePeopleButton.setSelected(true); }
            statusPeopleText.setText(ppl.getStatus());
        } catch (ParseException ex) {
            Logger.getLogger(PersonnelGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //Get the value of the selected button in a Radio Button group
    private String getSelectedButton()
    {  
        for (Enumeration<AbstractButton> buttons = genderButtonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                    return button.getText();
            }
        }
        return null;
    }
    
    //Clear the components and reset them to default state
    private void clearComponents(javax.swing.JPanel panel)
    {
        //Loops through each Components in the Panel
        for(Component control : panel.getComponents())
        {
            //If Component is a Text Field
            if(control instanceof JTextField)
            {
                JTextField ctrl = (JTextField) control;
                ctrl.setText("");
            }
            //If Component is a Combo Box
            else if (control instanceof JComboBox)
            {
                JComboBox ctr = (JComboBox) control;
                ctr.setEditable(true);
                ctr.setSelectedItem("Select an Option");
            }
            //If Component is a Radio Button
            else if (control instanceof JRadioButton)
            {
                JRadioButton rb = (JRadioButton) control;
                rb.setSelected(false);
            }
            //If Component is a Date Chooser in PeoplePanel
            else if (control instanceof JDateChooser && panel.getToolTipText().equals("peoplePanel"))
            {
                JDateChooser dc = (JDateChooser) control;
                ((JTextField)dc.getDateEditor().getUiComponent()).setText("Date of Birth");
            }
            //If Component is a Date Chooser in Appointment Panel
            else if (control instanceof JDateChooser && panel.getToolTipText().equals("appointmentPanel"))
            {
                JDateChooser dc = (JDateChooser) control;
                ((JTextField)dc.getDateEditor().getUiComponent()).setText("Appointment Date");
            }
            //If Component is a Spinner
            else if (control instanceof JSpinner)
            {
                JSpinner spinner = (JSpinner) control;
                spinner.setValue(((SpinnerNumberModel) spinner.getModel()).getMinimum());
            }
        }
    }
    
    //Display Appointment details in text fields and related components
    private void displayAppointmentDetails(Appointment appointment)
    {
        try {
            apIDText.setText(appointment.getAppointmentID());
            Date date = new SimpleDateFormat("dd-MM-yyyy").parse(appointment.getDate());
            dateAPChooser.setDate(date);
            peopleAPText.setText(appointment.getPeople().getUsername());
            centreAPCombo.setSelectedItem(appointment.getCentre().getCentreName());
            vaccineAPCombo.setSelectedItem(appointment.getVaccine().getVaccineName());
            LocalTime time = appointment.getTime();
            int hour = time.getHour();
            int minute = time.getMinute();
            apHourSlider.setValue(hour);
            apMinuteSlider.setValue(minute);
        } 
        catch (ParseException ex) {
            ex.printStackTrace();
        }
    }
    
    private void updateAppointmentTable()
    {
        DefaultTableModel table = (DefaultTableModel) appointmentTable.getModel();
        table.setRowCount(0);
        int count=0;
        ObjectInputStream ois = null;
        
        try {
            ois = new ObjectInputStream(new FileInputStream(new Appointment().getDataAppointment()));
            Object obj = null;
            while ((obj = ois.readObject()) != null) {
                count++;
                LocalTime time = ((Appointment)obj).getTime();
                String[] row = { ((Appointment)obj).getAppointmentID(), 
                    ((Appointment)obj).getDate(),
                    time.toString(),
                    ((Appointment)obj).getCentre().getCentreName(), 
                    ((Appointment)obj).getPeople().getUsername(), 
                    ((Appointment)obj).getExpDate(), 
                    ((Appointment)obj).getVaccine().getVaccineName(), 
                    Integer.toString(((Appointment)obj).getDoseNum())};
                table.addRow(row);

            }
        } catch (EOFException ex) {} 
        catch (ClassNotFoundException ex) { ex.printStackTrace(); }
        catch (FileNotFoundException ex) { ex.printStackTrace(); }
        catch (IOException ex) { ex.printStackTrace(); }
        finally {
            try {
                if (ois != null) {
                    ois.close();
                }
            } catch (IOException ex) { ex.printStackTrace(); }
        }
    }
    
    private void updateStatusTable(String date, String vaccineName, String centreName)
    {
        try
        {
            modifyVaccineButton.setEnabled(false);
            deleteVaccineButton.setEnabled(false);
            DefaultTableModel table = (DefaultTableModel) statusTable.getModel();
            table.setRowCount(0);
            int count=0;
            Centre centreDetails = new Centre();
            //If any Centre from the Combo Box is selected
            if (!centreName .equals("None"))
            {
                centreDetails = centreDetails.searchCentre(centreName);
            }
            
            //If both combo box are selected
            if (!vaccineName.equals("None") && !centreName.equals("None"))
            {
                for (Vaccine vaccine:centreDetails.getVaccine())
                {
                    if (vaccine.getVaccineName().equals(vaccineName))
                    {
                        count++;
                        String[] row = {centreDetails.getCentreName(),
                                centreDetails.getCentreLocation(),
                                vaccineName,
                                Integer.toString(new Centre().getRemainingVaccine(
                                        vaccine.getVaccineName(),
                                        centreDetails.getCentreName(),date)) };
                        table.addRow(row);
                    }
                }
            }
            //If only Vaccine Name is selected
            else if (!vaccineName.equals("None") && centreName.equals("None"))
            {
                HashMap<String, String> allCentre = new Centre().getAllCentre();
                for (String eachCentreName:allCentre.keySet())
                {
                    if (new Centre().getCentreVaccines(eachCentreName)
                            .contains(vaccineName))
                    {
                    count++;
                    String[] row = {eachCentreName,
                            allCentre.get(eachCentreName),
                            vaccineName,
                            Integer.toString(new Centre().getRemainingVaccine(
                                    vaccineName,
                                    eachCentreName, date))};
                    table.addRow(row);
                    }
                }   
            }
            //If only Centre Name is selected
            else if (vaccineName.equals("None") && !centreName.equals("None"))
            {
                    for (Vaccine vaccine:centreDetails.getVaccine())
                    {
                        count++;
                        String[] row = {centreDetails.getCentreName(),
                                centreDetails.getCentreLocation(),
                                vaccine.getVaccineName(),
                                Integer.toString(new Centre().getRemainingVaccine(
                                        vaccine.getVaccineName(),
                                        centreDetails.getCentreName(), date))};
                        table.addRow(row);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,
                        "No options are selected to search!", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch(NullPointerException ex) {
            JOptionPane.showMessageDialog(null,
                    "Please select a date to search!", "Error",
                    JOptionPane.ERROR_MESSAGE);
        } 
    }
    
    private void updateDashboard(){
        //Number of users
        jLabel37.setText(String.valueOf(new User().getUserCount()));
        LocalDate currentDate = LocalDate.now();
        //Number of upcoming appointments
        jLabel44.setText(String.valueOf(new Appointment()
                .getAppointmentCount(currentDate)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adAPButton;
    private javax.swing.JButton addPeopleButton;
    private javax.swing.JSpinner addSupplySpinner;
    private javax.swing.JButton addVaccineButton;
    private javax.swing.JSpinner apHourSlider;
    private javax.swing.JTextField apIDSearchText;
    private javax.swing.JTextField apIDText;
    private javax.swing.JSpinner apMinuteSlider;
    private javax.swing.JLabel appointmentButtonLabel;
    private javax.swing.JPanel appointmentPanel;
    private javax.swing.JPanel appointmentPanelButton;
    private javax.swing.JTable appointmentTable;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JLabel backgroundImage1;
    private javax.swing.JComboBox<String> centreAPCombo;
    private javax.swing.JComboBox<String> centreCombo;
    private javax.swing.JComboBox<String> centreModifyCombo;
    private javax.swing.JComboBox<String> centreSearchCombo;
    private javax.swing.JTextField citizenPeopleText;
    private javax.swing.JButton clearAPButton;
    private javax.swing.JButton clearPeopleButton;
    private com.toedter.calendar.JDateChooser dateAPChooser;
    private com.toedter.calendar.JDateChooser dateVaccineChooser;
    private javax.swing.JButton deleteAPButton;
    private javax.swing.JButton deletePeopleButton;
    private javax.swing.JButton deleteVaccineButton;
    private com.toedter.calendar.JDateChooser dobPeopleChooser;
    private javax.swing.JRadioButton femalePeopleButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel homeButtonLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JPanel homePanelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel mainPanels;
    private javax.swing.JRadioButton malePeopleButton;
    private javax.swing.JButton modifyVaccineButton;
    private javax.swing.JTextField passPeopleText;
    private javax.swing.JTextField peopleAPText;
    private javax.swing.JLabel peopleButtonLabel;
    private javax.swing.JTextField peopleNameText;
    private javax.swing.JPanel peoplePanel;
    private javax.swing.JPanel peoplePanelButton;
    private javax.swing.JTable peopleTable;
    private javax.swing.JTextField phonePeopleText;
    private javax.swing.JButton returnButton;
    private javax.swing.JButton returnModifyButton;
    private javax.swing.JButton saveAPButton;
    private javax.swing.JButton saveModifyButton;
    private javax.swing.JButton savePeopleButton;
    private javax.swing.JButton saveVaccineButton;
    private javax.swing.JButton searchAPButton;
    private javax.swing.JButton searchPeopleButton;
    private javax.swing.JButton searchStatusButton;
    private javax.swing.JPanel sidePanels;
    private javax.swing.JComboBox<String> stateComboBox;
    private com.toedter.calendar.JDateChooser statusDateChooser;
    private javax.swing.JTextField statusPeopleText;
    private javax.swing.JTable statusTable;
    private javax.swing.JTextField userIDText;
    private javax.swing.JTextField usernamePeopleText;
    private javax.swing.JComboBox<String> vaccineAPCombo;
    private javax.swing.JLabel vaccineButtonLabel;
    private javax.swing.JComboBox<String> vaccineCombo;
    private javax.swing.JComboBox<String> vaccineModifyCombo;
    private javax.swing.JPanel vaccinePanel;
    private javax.swing.JPanel vaccinePanelButton;
    private javax.swing.JTextField vaccineQuantityText;
    private javax.swing.JComboBox<String> vaccineSearchCombo;
    // End of variables declaration//GEN-END:variables
}
